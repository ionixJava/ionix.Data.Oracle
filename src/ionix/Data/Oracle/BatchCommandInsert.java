package ionix.Data.Oracle;

import ionix.Data.*;
import ionix.Utils.Ext;
import ionix.Utils.Triplet;

import java.util.HashSet;
import java.util.List;

public class BatchCommandInsert<TEntity> extends ionix.Data.BatchCommandInsert<TEntity>  {

    public BatchCommandInsert(Class<TEntity> entityClass, TransactionalDbAccess dataAccess){
        super(entityClass, dataAccess);
    }

    @Override
    protected ionix.Data.EntitySqlQueryBuilderInsert createInsertBuilder(){
        return new ionix.Data.Oracle.EntitySqlQueryBuilderInsert(this.getDataAccess());
    }

    @Override
    protected int getMetaDataSize(EntityMetaData metaData, Triplet<SqlQuery, AutoGeneratedKey, FieldMetaData> result){
        int metaDataSize = this.getInsertFields() == null ? metaData.size() : this.getInsertFields().size();
        FieldMetaData sequenceIdenty = result.Item3;
        if (null != sequenceIdenty){
            --metaDataSize;
        }
        return metaDataSize;
    }
}
